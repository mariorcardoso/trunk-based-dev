name: Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  lint:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Lint JavaScript files
        run: npm run lint

      - name: Get the commit message using GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
          COMMIT_MESSAGE=$(gh pr view ${{ github.event.pull_request.number }} --json commits -q '.commits[-1].commit.message')
          echo "Last commit message: $COMMIT_MESSAGE"
        env:
          GH_HOST: ${{ github.event.pull_request.base.repo.url }}

      - name: Get the commit message
        run: |
          echo "Event: ${{ github.event }}"
          echo "Event sender: ${{ github.event.sender }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Commit pl message: ${{ github.event.pull_request.head_commit.message }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"

  deploy_staging:
    needs: [test, lint]
    runs-on: ubuntu-latest
    environment: staging

    if: github.event.head_commit.message == 'PREVIEW'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Staging
        uses: netlify/actions/cli@master
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        with:
          args: deploy --prod --dir .
